{"version":3,"sources":["src/index.js"],"names":["state","tempCount","cityName","latitude","longitude","convertTempKtoF","tempInK","Math","round","getCityCoordinates","axios","get","params","q","then","response","data","lat","lon","console","log","current","temp","changeTempColor","populateLandscape","catch","error","increaseTemp","event","document","querySelector","textContent","decreaseTemp","temperature","getElementById","style","color","landscape","cityInput","inputValue","value","resetCityInput","city","populateSky","skyContainer","sky","registerEventHandlers","addEventListener","readyState"],"mappings":"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","file":"src.fe92932b.js","sourceRoot":"..","sourcesContent":["// import 'regenerator-runtime/runtime';\n// import axios from 'axios';\n('use strict');\n\nconst state = {\n  tempCount: 60,\n  cityName: 'Seattle',\n  latitude: 0,\n  longitude: 0,\n};\n\nfunction convertTempKtoF(tempInK) {\n  return Math.round(1.8 * (tempInK - 273) + 32);\n}\n\nconst getCityCoordinates = () => {\n  axios\n    .get('https://fast-dawn-95769.herokuapp.com/location', {\n      params: {\n        q: state.cityName,\n      },\n    })\n    .then((response) => {\n      state.latitude = response.data[0].lat;\n      state.longitude = response.data[0].lon;\n      console.log('Success: ', response.data);\n\n      // call the weather API here\n      const getCityTemp = () => {\n        axios\n          .get('https://fast-dawn-95769.herokuapp.com/weather', {\n            params: {\n              lat: state.latitude,\n              lon: state.longitude,\n            },\n          })\n          .then((response) => {\n            console.log(response.data.current.temp);\n            state.tempCount = convertTempKtoF(response.data.current.temp);\n            changeTempColor();\n            populateLandscape();\n          })\n          .catch((error) => {\n            console.log('Error: ', error);\n          });\n      };\n\n      getCityTemp();\n    })\n    .catch((error) => {\n      console.log('Error: ', error.response);\n    });\n};\n\nconst increaseTemp = (event) => {\n  const tempCountContainer = document.querySelector('#tempCount');\n  tempCountContainer.textContent = `${state.tempCount}`;\n  state.tempCount += 1;\n  changeTempColor();\n  populateLandscape();\n};\n\nconst decreaseTemp = (event) => {\n  const tempCountContainer = document.querySelector('#tempCount');\n  tempCountContainer.textContent = `${state.tempCount}`;\n  state.tempCount -= 1;\n  changeTempColor();\n  populateLandscape();\n};\n\nfunction changeTempColor() {\n  const temperature = document.getElementById('tempCount');\n  temperature.textContent = `${state.tempCount}`;\n  if (state.tempCount <= 32) {\n    temperature.style.color = '#4f0e99';\n  } else if (state.tempCount >= 33 && state.tempCount < 45) {\n    temperature.style.color = '#0e2c99';\n  } else if (state.tempCount >= 46 && state.tempCount < 55) {\n    temperature.style.color = '#0e8299';\n  } else if (state.tempCount >= 56 && state.tempCount < 65) {\n    temperature.style.color = '#4a7d04';\n  } else if (state.tempCount >= 66 && state.tempCount < 75) {\n    temperature.style.color = '#c46410';\n  } else if (state.tempCount >= 75) {\n    temperature.style.color = '#c42510';\n  }\n}\n\nfunction populateLandscape() {\n  const landscape = document.getElementById('landscape');\n  if (state.tempCount <= 32) {\n    landscape.textContent = '❄️ 🌲 ⛄️ 🌲⛄️ ❄️ 🌲 ❄️ 🌲 ⛄️ ❄️ 🌲';\n  } else if (state.tempCount >= 33 && state.tempCount < 45) {\n    landscape.textContent = '🌲 🌲 🌲 🍂 🌲 🍁 🌲 🌲 🍂 🌲';\n  } else if (state.tempCount >= 56 && state.tempCount < 65) {\n    landscape.textContent = '🌾 🌿  🌾 🌳 🌾 🍃 🌾 🌳 🌾 🍃';\n  } else if (state.tempCount >= 66 && state.tempCount < 75) {\n    landscape.textContent = '🌸 🌿 🌼 🌴 🌷 🌻 🌿 ☘️ 🌱 🌻 🌷';\n  } else if (state.tempCount >= 75) {\n    landscape.textContent = '🌵 🐍 ♨️ 🌵 🔥 🌵 🐍 🏜 ♨️';\n  }\n}\n\n// wave 3, city name must update every time there is a text input\n\nconst cityInput = () => {\n  let inputValue = document.getElementById('userInputCity').value;\n  let city = document.getElementById('cityName');\n  city.textContent = inputValue;\n  state.cityName = inputValue;\n};\n\nfunction resetCityInput() {\n  let city = document.getElementById('cityName');\n  let inputContainer = document.getElementById('userInputCity');\n  inputContainer.value = '';\n  city.textContent = '';\n}\n\n// // //wave 05\nfunction populateSky() {\n  const skyContainer = document.getElementById('changeTheSky');\n  const sky = document.getElementById('sky');\n  switch (skyContainer.value) {\n    case 'sunny':\n      sky.textContent = '😎 😎 😎 😎 ☀️ 😎 😎 😎 😎';\n      break;\n    case 'cloudy':\n      sky.textContent = '☁️ ☁️  ☁️☁️ ☁️ 🌤 ☁️ ☁️ ☁️☁️☁️';\n      break;\n    case 'rainy':\n      sky.textContent = '🌧🌈⛈🌧🌧💧⛈🌧🌦🌧💧🌧🌧';\n      break;\n    case 'snowy':\n      sky.textContent = '🌨❄️🌨🌨❄️❄️🌨❄️🌨❄️❄️🌨🌨';\n      break;\n    case 'catsanddogs':\n      sky.textContent = '🌨🐶🐱🐶🐱🐶🐱🐶🐱🐶🐱🐶🌨';\n      break;\n  }\n}\n\nconst registerEventHandlers = (event) => {\n  changeTempColor();\n  populateLandscape();\n  populateSky();\n\n  const cityName = document.getElementById('userInputCity');\n  cityName.addEventListener('change', cityInput);\n\n  const clearCityName = document.getElementById('clearButton');\n  clearCityName.addEventListener('click', resetCityInput);\n\n  const getRealTempButton = document.querySelector('#getRealTempButton');\n  getRealTempButton.addEventListener('click', getCityCoordinates);\n\n  const increaseTempButton = document.querySelector('#increaseTempButton');\n  increaseTempButton.addEventListener('click', increaseTemp);\n\n  const decreaseTempButton = document.querySelector('#decreaseTempButton');\n  decreaseTempButton.addEventListener('click', decreaseTemp);\n\n  const selectTheSky = document.querySelector('#changeTheSky');\n  selectTheSky.addEventListener('change', populateSky);\n};\n\nif (document.readyState !== 'loading') {\n  registerEventHandlers();\n} else {\n  document.addEventListener('DOMContentLoaded', registerEventHandlers);\n}\n"]}